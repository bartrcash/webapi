"""empty message

Revision ID: 74726003b49d
Revises: 4e223113c433
Create Date: 2021-05-27 22:31:44.486191

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '74726003b49d'
down_revision = '4e223113c433'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recover_password_request',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('expire_at', sa.Integer(), nullable=False),
    sa.Column('change_made', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_recover_password_request_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recover_password_request'))
    )
    op.drop_index('idx_account_description', table_name='account')
    op.drop_index('idx_account_name', table_name='account')
    op.drop_table('person_by_account')
    op.drop_table('account')
    op.drop_table('persona')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('persona',
    sa.Column('persona_id', sa.INTEGER(), server_default=sa.text("nextval('persona_persona_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('persona_id', name='persona_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('person_by_account',
    sa.Column('person_by_account_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('persona_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.account_id'], name='person_by_account_account_id_fkey'),
    sa.ForeignKeyConstraint(['persona_id'], ['persona.persona_id'], name='person_by_account_persona_id_fkey'),
    sa.PrimaryKeyConstraint('person_by_account_id', name='person_by_account_pkey')
    )
    op.create_table('account',
    sa.Column('account_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('account_id', name='account_pkey')
    )
    op.create_index('idx_account_name', 'account', ['name'], unique=False)
    op.create_index('idx_account_description', 'account', ['description'], unique=False)
    op.drop_table('recover_password_request')
    # ### end Alembic commands ###
